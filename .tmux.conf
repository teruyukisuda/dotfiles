# prefixキーをC-tに変更する
set -g prefix C-t

set -g history-limit 999999999

# C-bのキーバインドを解除する
unbind C-b

# C-f*2でtmux内のプログラムにC-fを送る
bind C-f send-prefix

#set display-panes-time 100000
#メッセージ表示時間指定
set-option -g display-time 10000
set-option -g display-panes-time 10000

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"

# new windowの際、pwdの継承
bind c new-window -c "#{pane_current_path}"

# \ でペインを縦に分割する
#bind | split-window -h
bind \\ split-window -c "#{pane_current_path}" -h

# - でペインを横に分割する
#bind - split-window -v
bind - split-window -c "#{pane_current_path}" -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 256色端末を使用する
set -g default-terminal "screen-256color"
#set -g terminal-overrides 'xterm:colors=256'


# statusラインと上部に配置
set -g status-position top
## statusラインの背景色
set -g status-bg colour234
## statusラインの位置
set -g status-justify centre


# paneのボーダーの色設定
# https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg
set -g pane-border-style bg="colour0"
set -g pane-border-style fg="colour238"
set -g pane-active-border-style bg="colour0"
set -g pane-active-border-style fg="colour119"

# 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green] #S #[fg=yellow]#I #[fg=cyan]#P"

# センターパネルを設定する
setw -g window-status-style fg="colour244"
setw -g window-status-style bg="colour234"
setw -g window-status-style "none"
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-current-style bg="colour239"
setw -g window-status-current-style "bold"
setw -g window-status-current-format '\
#[fg=colour239]#[bg=colour234]#[bg=colour239]#[fg=colour119]\
#I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]\
#F#[fg=colour239]#[bg=colour234]'
#
### 右パネルを設定する
#set -g status-right "#[fg=green][%Y-%m-%d(%a) %H:%M]"

# ステータスバーの色を設定する
#set -g status-fg white
#set -g status-bg black
#set -g status-style fg="white",bg="black"

# ウィンドウリストの色を設定する
#setw -g window-status-fg cyan
#setw -g window-status-bg default
#setw -g window-status-attr dim
#setw -g window-status-style bg="default","dim",fg="green"

# アクティブなウィンドウを目立たせる
#setw -g window-status-current-fg white
#setw -g window-status-current-bg red
#setw -g window-status-current-attr bright
#setw -g window-status-activity-style bg="white","bright",fg="red"

# window-status のフォーマットを指定する。
#set-window-option -g window-status-format " #I: #W "

# カレントウィンドウの window-status のフォーマットを指定する
#set-window-option -g window-status-current-format "#[fg=colour255,bg=colour27,bold] #I: #W #[default]"

# ペインボーダーの色を設定する
#set -g pane-border-fg green
#set -g pane-border-bg black
#set -g pane-border-style fg="colour236",bg="black"

# アクティブなペインを目立たせる
#set -g pane-active-border-style fg="white",bg="yellow"

# コマンドラインの色を設定する
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright
#set -g message-style fg="white","bright",bg="black"


## ステータスバーのUTF-8サポートを有効にする
# set -g status-utf8 on

## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 60


## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on


# 以下コピーモードでクリップボードへコピーするための設定
# http://blog.pg1x.com/entry/2014/08/22/200000
# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
#
# Mac Specific Setting
set-option -g default-command "reattach-to-user-namespace -l bash"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim

#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# https://qiita.com/jyotti/items/5383d909f7307762fefaこれを参考にする
set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -Tcopy-mode-vi 'Enter'
#bind-key -Tcopy-mode-vi 'Enter' copy-pipe "reattach-to-user-namespace pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
# 以上コピーモードでクリップボードへコピーするための設定


# tpm(tmuxプラグイン管理)の設定
# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'

run-shell '~/.tmux/plugins/tpm/tpm'
# ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
# tpmの設定


set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"

#set-hook -ga window-pane-changed 'run-shell "fig bg:tmux #{pane_id}"'
#set-hook -ga session-windows-changed 'run-shell "fig bg:tmux #{pane_id}"'
#set-hook -ga client-session-changed 'run-shell "fig bg:tmux #{pane_id}"'

# set-hook -ga client-detached run-shell 'run-shell "fig bg:tmux closed"'
#set-hook -ga session-closed 'run-shell "fig bg:tmux '%'"'
